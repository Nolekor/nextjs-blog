{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["// contentlayer.config.js\r\n\r\nimport { makeSource, defineDocumentType } from \"@contentlayer/source-files\";\r\nimport readingTime from \"reading-time\";\r\nimport rehypeAutolinkHeadings from \"rehype-autolink-headings\";\r\nimport rehypePrettyCode from \"rehype-pretty-code\";\r\nimport rehypeSlug from \"rehype-slug\";\r\nimport remarkGfm from \"remark-gfm\";\r\nimport GithubSlugger from \"github-slugger\";\r\n\r\nconst Blog = defineDocumentType(() => ({\r\n    name: \"Blog\",\r\n    filePathPattern: \"**/**/*.mdx\",\r\n    contentType: \"mdx\",\r\n    fields: {\r\n        title: {\r\n            type: \"string\",\r\n            required: true,\r\n        },\r\n        publishedAt: {\r\n            type: \"date\",\r\n            required: true,\r\n        },\r\n        updatedAt: {\r\n            type: \"date\",\r\n            required: true,\r\n        },\r\n        description: {\r\n            type: \"string\",\r\n            required: true,\r\n        },\r\n        image: {\r\n            type: \"image\",\r\n        },\r\n        isPublished: {\r\n            type: \"boolean\",\r\n            default: true,\r\n        },\r\n        author: {\r\n            type: \"string\",\r\n            required: true,\r\n        },\r\n        tags: {\r\n            type: \"list\",\r\n            of: { type: \"string\" },\r\n        },\r\n    },\r\n    computedFields: {\r\n        url_path: {\r\n            type: \"string\",\r\n            resolve: (doc) => `/blog/${doc._raw.flattenedPath}`,\r\n        },\r\n        readingTime: {\r\n            type: \"json\",\r\n            resolve: (doc) => readingTime(doc.body.raw),\r\n        },\r\n\r\n        //errore di compiling------------------------------\r\n\r\n        //     toc: {\r\n        //         type: \"json\",\r\n        //         resolve: async (doc) => {\r\n        //             const slugger = new GithubSlugger();\r\n        //             const regularExp = /\\n(?<flag>#{1,6})\\s+(?<content>.+)/g;\r\n        //             const headings = array(doc.body.raw.matchAll(regularExp)).map(\r\n        //                 ({ groups }) => {\r\n        //                     const flag = groups?.flag;\r\n        //                     const content = groups?.content;\r\n        //                     return {\r\n        //                         level:\r\n        //                             flag?.length == 1\r\n        //                                 ? \"one\"\r\n        //                                 : flag?.length == 2\r\n        //                                 ? \"two\"\r\n        //                                 : \"three\",\r\n        //                         text: content,\r\n        //                         slug: slugger.slug(content),\r\n        //                     };\r\n        //                 }\r\n        //             );\r\n        //             return headings;\r\n        //         },\r\n        //     },\r\n\r\n        // -----------------\r\n    },\r\n}));\r\nconsole.log(Blog);\r\nconst codeOptions = {\r\n    theme: \"github-dark\",\r\n};\r\n\r\nexport default makeSource({\r\n    contentDirPath: \"content\",\r\n    documentTypes: [Blog],\r\n    mdx: {\r\n        remarkPlugins: [remarkGfm],\r\n        rehypePlugins: [\r\n            rehypeSlug,\r\n            [rehypeAutolinkHeadings, { behavior: \"append\" }],\r\n            [rehypePrettyCode, codeOptions],\r\n        ],\r\n    },\r\n});\r\n"],
  "mappings": ";AAEA,SAAS,YAAY,0BAA0B;AAC/C,OAAO,iBAAiB;AACxB,OAAO,4BAA4B;AACnC,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,eAAe;AACtB,OAAO,mBAAmB;AAE1B,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACnC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACJ,OAAO;AAAA,MACH,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,WAAW;AAAA,MACP,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,OAAO;AAAA,MACH,MAAM;AAAA,IACV;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,SAAS;AAAA,IACb;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,UAAU;AAAA,IACd;AAAA,IACA,MAAM;AAAA,MACF,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,IACzB;AAAA,EACJ;AAAA,EACA,gBAAgB;AAAA,IACZ,UAAU;AAAA,MACN,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,SAAS,IAAI,KAAK,aAAa;AAAA,IACrD;AAAA,IACA,aAAa;AAAA,MACT,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,YAAY,IAAI,KAAK,GAAG;AAAA,IAC9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EA8BJ;AACJ,EAAE;AACF,QAAQ,IAAI,IAAI;AAChB,IAAM,cAAc;AAAA,EAChB,OAAO;AACX;AAEA,IAAO,8BAAQ,WAAW;AAAA,EACtB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACD,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MACX;AAAA,MACA,CAAC,wBAAwB,EAAE,UAAU,SAAS,CAAC;AAAA,MAC/C,CAAC,kBAAkB,WAAW;AAAA,IAClC;AAAA,EACJ;AACJ,CAAC;",
  "names": []
}
